apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: clone-task-ref
spec:
  workspaces:
    - name: task-ws
      description: Workspace for sharing files between tasks
  steps:
    - name: clone-step
      image: bitnami/git
      securityContext:
        runAsUser: 0
      command: ["/bin/sh"]
      args:
        - -c
        - |
            echo "Starting initial task"
            git clone https://github.com/Gokul-C/DevOps-K8s-Security.git $(workspaces.task-ws.path)/image-building
            sleep 15
            ls -la $(workspaces.task-ws.path)/image-building
            echo "Ending clone task"
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: build-task-ref
spec:
  workspaces:
    - name: task-ws
      description: Workspace for sharing files between tasks
  steps:
    - name: build-task
      image: maven
      securityContext:
        runAsUser: 0
      command: ["/bin/sh"]
      args:
        - -c
        - |
            echo "Starting build task - Reading file from workspace"
            cd $(workspaces.task-ws.path)/image-building
            mvn clean package
            echo "End final task"
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: sonar-task-ref
spec:
  workspaces:
    - name: task-ws
      description: Workspace for sharing files between tasks
  steps:
    - name: sonar-task
      image: maven
      securityContext:
        runAsUser: 0
      command: ["/bin/sh"]
      args:
        - -c
        - |
            echo "Starting sonar scanning task - Reading file from workspace"
            cd $(workspaces.task-ws.path)/image-building
            mvn clean verify sonar:sonar -Dsonar.projectKey=tekton-sonar -Dsonar.projectName='tekton-sonar' -Dsonar.host.url=http://10.0.1.38:9000 -Dsonar.token=sqp_f197446aaae8c2a83d5f09df398fef507afd7e01
            echo "End sonar scanning"
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: buildah-task-ref
spec:
  params:
  - name: IMAGE
    description: Reference of the image buildah will produce.
    default: "tekton-image"
  - name: BUILDER_IMAGE
    description: The location of the buildah builder image.
    default: quay.io/buildah/stable:v1.17.0
  - name: STORAGE_DRIVER
    description: Set buildah storage driver
    default: overlay
  - name: DOCKERFILE
    description: Path to the Dockerfile to build.
    default: ./Dockerfile
  - name: CONTEXT
    description: Path to the directory to use as context.
    default: .
  - name: TLSVERIFY
    description: Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)
    default: "true"
  - name: FORMAT
    description: The format of the built container, oci or docker
    default: "oci"
  - name: BUILD_EXTRA_ARGS
    description: Extra parameters passed for the build command when building images.
    default: ""
  - name: PUSH_EXTRA_ARGS
    description: Extra parameters passed for the push command when pushing images.
    type: string
    default: ""
  workspaces:
    - name: task-ws
      description: Workspace for sharing files between tasks
  steps:
    - name: buildah-task
      image: quay.io/buildah/stable:latest
      workingDir: $(workspaces.task-ws.path)/image-building
      securityContext:
        runAsUser: 0
      command: ["/bin/sh"]
      args:
        - -c
        - |
            echo "Starting image building task - Reading file from workspace"
            #cd $(workspaces.task-ws.path)/image-building
            #buildah login -u XXXXX -p XXXXX docker.io
            #buildah build -t buildah-image .
            #buildah tag buildah-image gokulc780/buildah-image
            #buildah push gokulc780/buildah-image
            #echo "End image building - pushing"
            buildah --storage-driver=$(params.STORAGE_DRIVER) bud \
              $(params.BUILD_EXTRA_ARGS) --format=$(params.FORMAT) \
              --tls-verify=$(params.TLSVERIFY) --no-cache \
              -f $(params.DOCKERFILE) -t $(params.IMAGE) $(params.CONTEXT)
